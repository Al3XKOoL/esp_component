#pragma once
#include "esphome/core/helpers.h"

#include <cinttypes>

namespace esphome {
namespace ili9xxx {

// Inicialización para M5STACK
static const uint8_t PROGMEM INITCMD_M5STACK[] = {
  0xEF, 3, 0x03, 0x80, 0x02,
  0xCF, 3, 0x00, 0xC1, 0x30,
  0xED, 4, 0x64, 0x03, 0x12, 0x81,
  0xE8, 3, 0x85, 0x00, 0x78,
  0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02,
  0xF7, 1, 0x20,
  0xEA, 2, 0x00, 0x00,
  ILI9XXX_PWCTR1  , 1, 0x23,
  ILI9XXX_PWCTR2  , 1, 0x10,
  ILI9XXX_VMCTR1  , 2, 0x3e, 0x28,
  ILI9XXX_VMCTR2  , 1, 0x86,
  ILI9XXX_MADCTL  , 1, MADCTL_BGR,
  ILI9XXX_VSCRSADD, 1, 0x00,
  ILI9XXX_PIXFMT  , 1, 0x55,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x13,
  ILI9XXX_DFUNCTR , 3, 0x08, 0x82, 0x27,
  0xF2, 1, 0x00,
  ILI9XXX_GAMMASET , 1, 0x01,
  ILI9XXX_GMCTRP1 , 15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, 0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03, 0x0E, 0x09, 0x00,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, 0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C, 0x31, 0x36, 0x0F,
  ILI9XXX_SLPOUT  , 0x80,
  ILI9XXX_DISPON  , 0x80,
  0x00
};

// Inicialización para M5CORE
static const uint8_t PROGMEM INITCMD_M5CORE[] = {
  ILI9XXX_SETEXTC, 3, 0xFF, 0x93, 0x42,
  ILI9XXX_PWCTR1 , 2, 0x12, 0x12,
  ILI9XXX_PWCTR2 , 1, 0x03,
  ILI9XXX_VMCTR1 , 1, 0xF2,
  ILI9XXX_IFMODE , 1, 0xE0,
  0xF6           , 3, 0x01, 0x00, 0x00,
  ILI9XXX_GMCTRP1,15, 0x00, 0x0C, 0x11, 0x04, 0x11, 0x08, 0x37, 0x89, 0x4C, 0x06, 0x0C, 0x0A, 0x2E, 0x34, 0x0F,
  ILI9XXX_GMCTRN1,15, 0x00, 0x0B, 0x11, 0x05, 0x13, 0x09, 0x33, 0x67, 0x48, 0x07, 0x0E, 0x0B, 0x2E, 0x33, 0x0F,
  ILI9XXX_DFUNCTR, 4, 0x08, 0x82, 0x1D, 0x04,
  ILI9XXX_IDMOFF , 0,
  ILI9XXX_DISPON , 0x80,
  ILI9XXX_SLPOUT , 0x80,
  0x00
};

// Inicialización para ILI9341
static const uint8_t PROGMEM INITCMD_ILI9341[] = {
  0xEF, 3, 0x03, 0x80, 0x02,
  0xCF, 3, 0x00, 0xC1, 0x30,
  0xED, 4, 0x64, 0x03, 0x12, 0x81,
  0xE8, 3, 0x85, 0x00, 0x78,
  0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02,
  0xF7, 1, 0x20,
  0xEA, 2, 0x00, 0x00,
  ILI9XXX_PWCTR1  , 1, 0x23,
  ILI9XXX_PWCTR2  , 1, 0x10,
  ILI9XXX_VMCTR1  , 2, 0x3e, 0x28,
  ILI9XXX_VMCTR2  , 1, 0x86,
  ILI9XXX_MADCTL  , 1, 0x48,
  ILI9XXX_VSCRSADD, 1, 0x00,
  ILI9XXX_PIXFMT  , 1, 0x55,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x18,
  ILI9XXX_DFUNCTR , 3, 0x08, 0x82, 0x27,
  0xF2, 1, 0x00,
  ILI9XXX_GAMMASET , 1, 0x01,
  ILI9XXX_GMCTRP1 , 15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, 0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03, 0x0E, 0x09, 0x00,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, 0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C, 0x31, 0x36, 0x0F,
  ILI9XXX_SLPOUT  , 0x80,
  ILI9XXX_DISPON  , 0x80,
  0x00
};

// Inicialización para ILI9481
static const uint8_t PROGMEM INITCMD_ILI9481[] = {
  ILI9XXX_SLPOUT ,  0x80,
  ILI9XXX_PWSET  , 3, 0x07, 0x41, 0x1D,
  ILI9XXX_VMCTR  , 3, 0x00, 0x1C, 0x1F,
  ILI9XXX_PWSETN , 2, 0x01, 0x11,
  ILI9XXX_PWCTR1 , 5, 0x10, 0x3B, 0x00, 0x02, 0x11,
  ILI9XXX_VMCTR1 , 1, 0x03,
  ILI9XXX_IFCTR  , 1, 0x83,
  ILI9XXX_GMCTR  ,12, 0x00, 0x26, 0x21, 0x00, 0x00, 0x1F, 0x65, 0x23, 0x77, 0x00, 0x0F, 0x00,
  ILI9XXX_IFMODE , 1, 0x00,
  ILI9XXX_PTLAR , 4, 0x00, 0x00, 0x01, 0x3F,
  ILI9XXX_COLMOD , 1, 0x55,
  ILI9XXX_MADCTL , 1, 0x48,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

// Inicialización para ILI9486
static const uint8_t PROGMEM INITCMD_ILI9486[] = {
  ILI9XXX_SLPOUT ,  0x80,
  ILI9XXX_PWCTR1 , 2, 0x39, 0x2C,
  ILI9XXX_PWCTR2 , 1, 0x00,
  ILI9XXX_VMCTR1 , 1, 0x2C,
  ILI9XXX_VMCTR2 , 1, 0x80,
  ILI9XXX_VMCTR3 , 1, 0x02,
  ILI9XXX_MADCTL , 1, 0x08,
  ILI9XXX_PIXFMT , 1, 0x55,
  ILI9XXX_GAMSET , 1, 0x01,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x13,
  ILI9XXX_GMCTRP1 , 15, 0x00, 0x1D, 0x1E, 0x0B, 0x0F, 0x05, 0x08, 0x3C, 0x3C, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x1D, 0x1E, 0x0B, 0x0F, 0x05, 0x08, 0x3C, 0x3C, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

// Inicialización para ILI9488
static const uint8_t PROGMEM INITCMD_ILI9488[] = {
  ILI9XXX_SLPOUT ,  0x80,
  ILI9XXX_PWCTR1 , 2, 0x39, 0x2C,
  ILI9XXX_PWCTR2 , 1, 0x00,
  ILI9XXX_VMCTR1 , 1, 0x2C,
  ILI9XXX_VMCTR2 , 1, 0x80,
  ILI9XXX_VMCTR3 , 1, 0x02,
  ILI9XXX_MADCTL , 1, 0x08,
  ILI9XXX_PIXFMT , 1, 0x55,
  ILI9XXX_GAMSET , 1, 0x01,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x13,
  ILI9XXX_GMCTRP1 , 15, 0x00, 0x1D, 0x1E, 0x0B, 0x0F, 0x05, 0x08, 0x3C, 0x3C, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x1D, 0x1E, 0x0B, 0x0F, 0x05, 0x08, 0x3C, 0x3C, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

// Inicialización para WAVESHARE_RES_3_5
static const uint8_t PROGMEM INITCMD_WAVESHARE_RES_3_5[] = {
  ILI9XXX_SLPOUT , 0x80,
  0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02,
  0xF7, 1, 0x20,
  0xEA, 2, 0x00, 0x00,
  ILI9XXX_PWCTR1 , 1, 0x23,
  ILI9XXX_PWCTR2 , 1, 0x10,
  ILI9XXX_VMCTR1 , 2, 0x3e, 0x28,
  ILI9XXX_VMCTR2 , 1, 0x86,
  ILI9XXX_MADCTL , 1, 0x48,
  ILI9XXX_VSCRSADD , 1, 0x00,
  ILI9XXX_PIXFMT , 1, 0x55,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x13,
  ILI9XXX_DFUNCTR , 3, 0x08, 0x82, 0x27,
  0xF2, 1, 0x00,
  ILI9XXX_GAMMASET , 1, 0x01,
  ILI9XXX_GMCTRP1 , 15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, 0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03, 0x0E, 0x09, 0x00,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, 0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C, 0x31, 0x36, 0x0F,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

// Inicialización para ST7796
static const uint8_t PROGMEM INITCMD_ST7796[] = {
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_PWCTR1 , 2, 0xA0, 0x4F,
  ILI9XXX_PWCTR2 , 1, 0x0F,
  ILI9XXX_VMCTR1 , 2, 0x3C, 0x3C,
  ILI9XXX_VMCTR2 , 1, 0xC0,
  ILI9XXX_MADCTL , 1, 0x00,
  ILI9XXX_PIXFMT , 1, 0x55,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x1F,
  ILI9XXX_GAMSET , 1, 0x01,
  ILI9XXX_GMCTRP1 , 15, 0x00, 0x0F, 0x1E, 0x0C, 0x0E, 0x0C, 0x37, 0x3D, 0x0F, 0x0E, 0x0F, 0x0C, 0x31, 0x3B, 0x0F,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x0F, 0x1E, 0x0C, 0x0E, 0x0C, 0x37, 0x3D, 0x0F, 0x0E, 0x0F, 0x0C, 0x31, 0x3B, 0x0F,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

// Inicialización para S3BOX
static const uint8_t PROGMEM INITCMD_S3BOX[] = {
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_PWCTR1 , 2, 0x12, 0x12,
  ILI9XXX_PWCTR2 , 1, 0x03,
  ILI9XXX_VMCTR1 , 2, 0x3e, 0x28,
  ILI9XXX_VMCTR2 , 1, 0x86,
  ILI9XXX_IFMODE , 1, 0xE0,
  ILI9XXX_MADCTL , 1, 0x08,
  ILI9XXX_GAMSET , 1, 0x01,
  ILI9XXX_PIXFMT , 1, 0x55,
  ILI9XXX_FRMCTR1 , 2, 0x00, 0x13,
  ILI9XXX_GMCTRP1 , 15, 0x00, 0x0C, 0x11, 0x04, 0x11, 0x08, 0x37, 0x89, 0x4C, 0x06, 0x0C, 0x0A, 0x2E, 0x34, 0x0F,
  ILI9XXX_GMCTRN1 , 15, 0x00, 0x0B, 0x11, 0x05, 0x13, 0x09, 0x33, 0x67, 0x48, 0x07, 0x0E, 0x0B, 0x2E, 0x33, 0x0F,
  ILI9XXX_SLPOUT , 0x80,
  ILI9XXX_DISPON , 0x80,
  0x00
};

}  // namespace ili9xxx
}  // namespace esphome
